# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    about mlx.txt                                      :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: gdominic <gdominic@student.42barcelona.co  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/11/19 06:09:32 by gdominic          #+#    #+#              #
#    Updated: 2022/12/01 21:49:18 by gdominic         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

int	main(void)
{
	void	*mlx;
	void	*mlx_win; 	//call a windows variable
	
	mlx = mlx_init(); 	//return a pointer to mlx variable and initialize correctly the graphical system

	mlx_win = mlx_new_window(mlx, 1240, 720, "Hello world");
	mlx_loop(mlx);
	return (0);
}

int	main(void)
{
	void	*img;
	void	*mlx;

	mlx = mlx_init();
	img = mlx_new_image(mlx, 1240, 720);  // create a new image
}

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

typedef struct	s_data {
	
	void	*img;
	char	*addr;
	int		bits_per_pixel;
	int		line_length;
	int		endian;
}	t_data;

int	main(void)
{
	void	*mlx;
	t_data	img;

	mlx = mlx_init();
	img.img = mlx_new_image(mlx, 1240, 720);

	img.addr = mlx_get_data_addr(img.img, &img.bits_per_pixel, &img.line_length, &img.endian);
}
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
HOOKING
powerful tool from the mlx that is achieved from the follow function:

void	mlx_hook(mlx_win_list_t *win_ptr, int x_event, int x_mask, int (*f)(), void *param)

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

int	close2(int keycode, t_vars *vars)
{
	if (keycode == 53)
	vars = 0;
	if (keycode == 53)
		ft_printf("Hola\n");
	return (0);
}

int	main(void)
{
	t_vars	vars;

	vars.mlx = mlx_init();
	vars.win = mlx_new_window(vars.mlx, 1920, 1080, "Hello world!");
	mlx_hook(vars.win, 12, 0, close2, &vars);
	mlx_loop(vars.mlx);
}

INTRODUCCION
Hooking is used for many purposes, including debugging and extending funcionality, as intercepting keyboardaor moyuse event
messages before they reach an application. 
It also been used in benchmarking programs, as measure frame rate in 3D games, where the oputput and the input is done through 
hooking.
EXAMPLE

#include <mlx.h>
#include <stdio.h>

typedef struct s_vars {
	void	*mlx;
	void	*win;
}	t_vars;

int	key_hook(int keycode, t_vars *vars)
{
	printf("Hello from key_hook");
	return (0);
}

int	main(void)
{
	t_vars	vars;

	vars.mlx = mlx_init();
	vars.win = mlx_new_window(vars.mlx, 640, 480, "Hello world");
	mlx_key_hook(vars.win, key_hook, &vars);
	mlx_loop(vars.mlx);
}
